1) implementation  
import ReverseModule.ReversePOA; 
import java.lang.String; 
import java.util.*; 
import java.io.*; 
import java.lang.*; 
 
class Reverseimpl extends ReversePOA { 
    Reverseimpl() { 
        super(); 
        System.out.println("Reverse Object Created"); 
    } 
 
    public String reverse_string(String name) { 
        StringBuffer str = new StringBuffer(name); 
        str.reverse(); 
        return (("Server send: " + str)); 
    } 
} 
 
2)server 
import org.omg.CosNaming.NameComponent; 
import org.omg.CosNaming.NamingContextExt; 
import org.omg.CosNaming.NamingContextExtHelper; 
import org.omg.CosNaming.NamingContextPackage.*; 
import org.omg.CORBA.*; 
import org.omg.PortableServer.*; 
import java.io.*; 
import java.lang.*; 
import java.util.*; 
import ReverseModule.Reverse; 
 
class ReverseServer { 
    public static void main(String[] args) { 
 
        try { 
            org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init(args, null); 
            POA rootPOA = POAHelper.narrow(orb.resolve_initial_references("RootPOA")); 
            rootPOA.the_POAManager().activate(); 
            Reverseimpl rvr = new Reverseimpl(); 
            org.omg.CORBA.Object ref = rootPOA.servant_to_reference(rvr); 
            System.out.println("Step 1"); 
            Reverse h_ref = ReverseModule.ReverseHelper.narrow(ref); 
            System.out.println("Step 2"); 
            org.omg.CORBA.Object objRef = orb.resolve_initial_references("NameService"); 
            System.out.println("Step 3"); 
            NamingContextExt ncRef = NamingContextExtHelper.narrow(objRef); 
            System.out.println("Step 4"); 
            String name = "Reverse"; 
            NameComponent path[] = ncRef.to_name(name); 
            ncRef.rebind(path, h_ref); 
            System.out.println("Reverse Server Reading and Waiting..."); 
            orb.run(); 
        } 
 
        catch (Exception e) { 
            e.printStackTrace(); 
        } 
    } 
} 
 
3)  client  
import ReverseModule.*; 
import org.omg.CosNaming.*; 
//import org.omg.NamingContextPackage.*; 
import org.omg.CORBA.*; 
import java.io.*; 
import java.lang.*; 
import java.util.*; 
 
class ReverseClient { 
    public static void main(String[] args) { 
        Reverse Reverseimpl = null; 
        try { 
            org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init(args, null); 
            org.omg.CORBA.Object objRef = orb.resolve_initial_references("NameService"); 
            NamingContextExt ncRef = NamingContextExtHelper.narrow(objRef); 
            String name = "Reverse"; 
            Reverseimpl = ReverseHelper.narrow(ncRef.resolve_str(name)); 
            System.out.println("Enter String: "); 
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); 
            String str = br.readLine(); 
            String tempStr = Reverseimpl.reverse_string(str); 
 
            System.out.println(tempStr); 
 
        } catch (Exception e) { 
            e.printStackTrace(); 
        } 
    } 
} 
 
 command: idlj -fall Reversemodule.idl
javac *.java Reversemodule/*.java
ordb -ORBInitialPort 1050&
java ReverseServer -ORBInitialPort 1050 -ORBInitialHost localhost& 
java ReverseClient -ORBInitialPort 1050 -ORBInitialHost localhost 